-------------------
CSE247 Robot tester starts testing heaps on 2018-02-24 17:11:18 -0600

========
Testing in ./GradingRepos/repos/cse247-s18-students-d.ai: heaps as of 2018-02-15 00:05
========
Now in: /Users/puneetsachdeva/cse247-support/GradingRepos/repos/cse247-s18-students-d.ai
Your branch is up-to-date with 'origin/master'.
HEAD is now at 6e6e9ec robograde
No local changes to save

Updating 6e6e9ec..0763f8f
Fast-forward
 RoboGrade/heaps-test.TestMinHeap.txt | 67 ++++++++++++++++++------------------
 1 file changed, 33 insertions(+), 34 deletions(-)
Going back in time to: 2018-02-15 00:05
At hash 44f6852917e0fde44ef9d1d9691d3061c584901b

Buildfile: /Users/puneetsachdeva/cse247-support/build.xml

copytest:
     [echo] would copy from /Users/puneetsachdeva/git/cse247-s18-students key d.ai testfilesource test/TestMinHeap package heaps repo ./GradingRepos/repos/cse247-s18-students-d.ai
     [copy] Copying 1 file to /Users/puneetsachdeva/cse247-support/GradingRepos/repos/cse247-s18-students-d.ai/labs/heaps/test

BUILD SUCCESSFUL
Total time: 0 seconds
Compiling the code
Buildfile: /Users/puneetsachdeva/cse247-support/build.xml

compile:
     [echo] Compiling heaps/MinHeap
    [mkdir] Created dir: /Users/puneetsachdeva/cse247-support/GradingRepos/repos/cse247-s18-students-d.ai/bin
    [javac] Compiling 1 source file to /Users/puneetsachdeva/cse247-support/GradingRepos/repos/cse247-s18-students-d.ai/bin

BUILD SUCCESSFUL
Total time: 1 second
Buildfile: /Users/puneetsachdeva/cse247-support/build.xml

compile:
     [echo] Compiling heaps/test/TestMinHeap
    [javac] Compiling 1 source file to /Users/puneetsachdeva/cse247-support/GradingRepos/repos/cse247-s18-students-d.ai/bin

BUILD SUCCESSFUL
Total time: 1 second
Running test test.TestMinHeap
Buildfile: /Users/puneetsachdeva/cse247-support/build.xml

test:
    [junit] Running heaps.test.TestMinHeap
    [junit] Testsuite: heaps.test.TestMinHeap
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                2                                                               1                               
    [junit]                4                               3                               6                               7               
    [junit]        8               5               15              9               22              27              14              33      
    [junit]    42      10      13      21      23      18      12      11      24      26      28      41      29      17      45      38  
    [junit]  46  44  32  30  36  20  37  47  31  34  39  25  19  35  16  49  43  40  48
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.624 sec
    [junit] Output:
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                2                                                               1                               
    [junit]                4                               3                               6                               7               
    [junit]        8               5               15              9               22              27              14              33      
    [junit]    42      10      13      21      23      18      12      11      24      26      28      41      29      17      45      38  
    [junit]  46  44  32  30  36  20  37  47  31  34  39  25  19  35  16  49  43  40  48
    [junit] 
    [junit] 
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.624 sec
    [junit] ------------- Standard Output ---------------
    [junit] Testing unique size 0
    [junit] done
    [junit] Testing unique size 1
    [junit] done
    [junit] Testing unique size 2
    [junit] done
    [junit] Testing unique size 3
    [junit] done
    [junit] Testing unique size 4
    [junit] done
    [junit] Testing unique size 5
    [junit] done
    [junit] Testing unique size 6
    [junit] done
    [junit] Testing unique size 7
    [junit] done
    [junit] Testing unique size 8
    [junit] done
    [junit] Testing unique size 9
    [junit] done
    [junit] Testing with duplicates size 0
    [junit] done
    [junit] Testing with duplicates size 1
    [junit] done
    [junit] Testing with duplicates size 2
    [junit] done
    [junit] Testing with duplicates size 3
    [junit] done
    [junit] Testing with duplicates size 4
    [junit] done
    [junit] Testing with duplicates size 5
    [junit] done
    [junit] Testing with duplicates size 6
    [junit] done
    [junit] Testing with duplicates size 7
    [junit] done
    [junit] Testing with duplicates size 8
    [junit] done
    [junit] Testing with duplicates size 9
    [junit] done
    [junit] Displaying a correct heap of 50 unique integers:
    [junit]                                                                0                                                               
    [junit]                                2                                                               1                               
    [junit]                4                               3                               6                               7               
    [junit]        8               5               15              9               22              27              14              33      
    [junit]    42      10      13      21      23      18      12      11      24      26      28      41      29      17      45      38  
    [junit]  46  44  32  30  36  20  37  47  31  34  39  25  19  35  16  49  43  40  48
    [junit] 
    [junit] ------------- ---------------- ---------------
    [junit] 
    [junit] Testcase: testViaSorting took 0.075 sec
    [junit] Testcase: testEmptyHeap took 0.014 sec
    [junit] Testcase: testAndPrint took 0.027 sec
    [junit] Testcase: testExtractMin took 0.084 sec
    [junit] Testcase: testLocUpdatedHeapify took 0.008 sec
    [junit] Testcase: testInsert took 0.001 sec
    [junit] Testcase: testUsingHeapSort took 2.39 sec
    [junit] Testcase: testLocUpdatedDecrease took 0 sec

BUILD SUCCESSFUL
Total time: 3 seconds
================
Lab is counted as working
================

CSE247 Robot tester ends testing heaps on 2018-02-24 17:11:27 -0600
-------------------
